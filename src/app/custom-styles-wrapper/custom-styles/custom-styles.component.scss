@use "/src/styles/helpers/rules" as *;

$saturation-light: 47%;
$lightness-light: 92%;

$saturation-dark: 65%;
$lightness-dark: 86%;

$disabled-light: hsl(0, $saturation-light, $lightness-light);
$selected-light: hsl(205, $saturation-light, $lightness-light);
$selected-disabled-light: hsl(290, $saturation-light, $lightness-light);

$disabled-dark: hsl(0, $saturation-dark, $lightness-dark);
$selected-dark: hsl(205, $saturation-dark, $lightness-dark);
$selected-disabled-dark: hsl(290, $saturation-dark, $lightness-dark);

::ng-deep {
  * {
    box-sizing: border-box;
  }

  body {
    overflow: hidden;
    max-height: 100vh;
  }

  i {
    font-style: normal;
  }

  img {
    max-width: 100%;
    max-height: 100%;
  }

  .h-100 {
    height: 100%;
  }

  .mr-1 {
    margin-right: 1rem;
  }

  .my {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
  }
}

// :host {
//   #{button.$selector} {
//     &#{button.$selector--primary} {
//       --bg: yellow;
//     }
//   }
// }

// :host-context(#{themes.$light}) {
//   #{button.$selector} {
//     &#{button.$selector--primary} {
//       --bg: green;
//     }
//   }
// }

// :host-context(#{themes.$dark}) {
//   #{button.$selector} {
//     &#{button.$selector--primary} {
//       --bg: brown;
//     }
//   }
// }

:host ::ng-deep .fa-sharp {
  &::before {
    content: "#";
  }
}

::ng-deep {
  .k-list-container {
    margin-top: 0.5rem;
    border-radius: 4px;
    border: 1px solid #eeeeee;
    overflow: hidden;
    box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,
      rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;

    .k-list-content {
      @include hideScrollbar();
    }

    .k-list-item {
      background-color: white;
      font-family: Roboto, sans-serif;
      font-size: 1.4rem;
      color: #616161;
      transition: background-color 0.12s cubic-bezier(0.4, 0, 0.2, 1),
        color 0.12s cubic-bezier(0.4, 0, 0.2, 1);
      height: 3.2rem;

      &:hover {
        background-color: rgba(0, 0, 0, 0.04);
      }

      &.k-selected {
        background-color: rgb(33, 150, 243);
        box-shadow: none;
        color: white;

        &:hover {
          background-color: #1e88e5;
        }
      }
    }
  }
}

:host ::ng-deep {
  td.disabled {
    text-decoration: line-through;
    cursor: not-allowed;
    background: $disabled-light;
  }

  td.k-state-selected,
  tr.k-state-selected > td {
    background: $selected-light;

    &.disabled {
      background: $selected-disabled-light;
    }
  }

  tr:nth-child(even) {
    td.disabled {
      background: $disabled-dark;
    }

    td.k-state-selected,
    &.k-state-selected > td {
      background: $selected-dark;

      &.disabled {
        background: $selected-disabled-dark;
      }
    }
  }
}

.grid-wrapper {
  max-width: 100%;
}

.cdk-drop-list {
  min-height: 20px;
}

.cdk-drag-handle {
  margin-right: 0.5rem;
  font-weight: bold;
  cursor: grab;
}

.filename {
  cursor: pointer;
}

:host ::ng-deep .k-splitbar {
  background-color: #eeeeee;
  transition: background-color 0.12s cubic-bezier(0.4, 0, 0.2, 1);
  width: 3px;
  position: relative;
  left: -1px;

  .k-resize-handle {
    display: none;
  }

  &:hover {
    background-color: rgb(33, 150, 243);

    .k-resize-handle {
      background-color: white;
    }
  }
}

kendo-splitter-pane.preview-pane {
  margin-left: -1px;
  display: flex;
  flex-direction: column;
}

.preview-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-left: 2rem;
  padding-right: 1.1rem;
  height: 5.7rem;
  border-bottom: 1px solid #eeeeee;

  .preview-title {
    margin: auto;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-weight: 500;
    color: #212121;
    font-size: 1.4rem;
  }

  .close-preview {
    cursor: pointer;
    border: none;
    background-color: white;
    border-radius: 4px;
    box-shadow: none;
    color: rgb(158, 158, 158);
    height: 29px;
    width: 30px;
    font-size: 2.4rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transition(color);

    &:hover {
      color: #212121;
    }
  }
}

.page-wrapper {
  background: rgb(227, 242, 253);
  padding: 2.3rem;
  margin-top: 1.6rem;
  border-radius: 8px;
}

.preview-body {
  flex: 1;
  overflow: auto;
  display: flex;
  align-items: flex-start;

  .preview-img-wrapper {
    height: 100%;
    overflow: auto;
    flex: 1;
    border-bottom-right-radius: 4px;
    @include hideScrollbar();
  }

  img {
    display: block;
    width: 100%;
    max-height: none;
  }
}

.page {
  max-height: 65vh;
  height: 65vh;
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid rgba(144, 202, 249, 0.46);
}

.file {
  --color: rgb(103, 58, 183);
  --icon-size: 2.5rem;

  color: var(--color);
  font-weight: 500;
  cursor: pointer;
  width: fit-content;

  & + & {
    margin-top: 1rem;
  }

  &.attachment {
    --color: rgb(255, 193, 7);
  }

  .filename {
    position: relative;

    &::after {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      bottom: -1px;
      height: 2px;
      background-color: currentColor;
      transform-origin: left center;
      transform: scaleX(0);
      opacity: 0.75;
      transition: transition("transform", "opacity");
    }
  }

  &:hover {
    .filename::after {
      transform: scaleX(1);
      opacity: 1;
    }
  }

  i {
    color: var(--color);
    font-size: 1.5rem;
    font-weight: 700;
    background-color: transparent;
    border: 2px solid var(--color);
    width: var(--icon-size);
    height: var(--icon-size);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 100%;
    margin-right: 1rem;
    transition: transition("box-shadow", "background-color", "color");

    &:hover {
      color: rgb(227, 242, 253);
      background-color: var(--color);
      box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,
        rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;
    }
  }
}

:host ::ng-deep .k-dialog-wrapper {
  .k-dialog {
    border-radius: 8px;
    overflow: hidden;
    padding: 2.8rem 2.4rem 2rem;
  }

  .k-dialog-titlebar {
    background-color: transparent;
    color: rgb(33, 33, 33);
    border: none;
    padding: 0;

    .k-dialog-actions {
      display: none;
    }
  }

  .k-content {
    padding: 1.6rem 0;
  }

  .k-dialog-title {
    line-height: 1.6;
    font-size: 2rem;
    font-weight: 500;
    padding: 0;
    margin: 0;
  }

  .k-actions {
    border: none;
    justify-content: flex-end;
    padding: 0;

    button {
      flex: 0;
    }
  }

  .k-treeview-leaf {
    padding: 0.7rem 0.6rem;
    font-weight: 500;
    cursor: pointer;
    transition: transition(color);

    &:hover {
      background: transparent;
      color: #2196f3;
    }

    &:focus,
    &:focus-within,
    &.k-focus {
      box-shadow: none;
    }
  }

  .k-treeview-toggle .k-icon {
    transition: transition(color);

    &:hover {
      color: #2196f3;
    }
  }

  .k-checkbox {
    width: 1.6rem;
    height: 1.6rem;
    border: 2px solid rgb(158 158 158);
    border-radius: 2px;
    box-shadow: none;
    position: relative;
    top: -1px;
    transition: transition(color, box-shadow, border-color);
    background-color: transparent;

    &:hover {
      border-color: rgb(33, 150, 243);
    }

    &:checked,
    &:indeterminate {
      background-color: rgb(33, 150, 243);
      border-color: rgb(33, 150, 243);
    }

    &:indeterminate {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='square' stroke-linejoin='square' stroke-width='2' d='M4,8 h8'/%3e%3c/svg%3e");
      background-size: 15px;
    }
  }

  .k-treeview-filter {
    padding: 0;
    margin-bottom: 1.6rem;

    .k-input {
      height: 3.1rem;
      font-size: 1.4rem;
      color: rgb(97, 97, 97);
      background-color: rgb(250, 250, 250);
      font-family: Roboto, sans-serif;
      font-weight: 500;
      border-radius: 4px;
      border: 1px solid rgb(189, 189, 189);
      box-shadow: none;
      transition: transition(border-color);

      &:hover {
        border-color: rgb(33, 150, 243);
      }

      &:focus,
      &:focus-within {
        border-color: rgb(33, 150, 243);
        border-width: 2px;
      }
    }

    .k-input-prefix {
      padding-left: 0.8rem;
    }

    .k-clear-value {
      transition: transition(color);
      padding-right: 0.8rem;

      &:hover {
        color: rgb(244, 67, 54);
      }
    }

    .k-focus {
      .k-input-prefix {
        padding-left: 0.7rem;
      }

      .k-clear-value {
        padding-right: 0.7rem;
      }
    }
  }
}
